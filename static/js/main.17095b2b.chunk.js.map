{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","components/FetchData.js","components/Counter.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","displayName","name","inherits","createClass","key","value","react_default","a","createElement","react_bootstrap_es","inverse","fixedTop","fluid","collapseOnSelect","Header","Brand","es","to","Toggle","Collapse","lib","exact","glyph","Component","Layout","sm","NavMenu_NavMenu","props","children","Home","href","FetchData","state","forecasts","loading","fetch","then","response","json","data","setState","contents","renderForecastsTable","className","map","forecast","dateFormatted","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","bind","assertThisInitialized","onClick","App","Layout_Layout","react_router_es","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","App_App","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.17095b2b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Glyphicon, Nav, Navbar, NavItem } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  displayName = NavMenu.name\r\n\r\n  render() {\r\n    return (\r\n      <Navbar inverse fixedTop fluid collapseOnSelect>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            <Link to={'/'}>comet_cometh</Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle />\r\n        </Navbar.Header>\r\n        <Navbar.Collapse>\r\n          <Nav>\r\n            <LinkContainer to={'/'} exact>\r\n              <NavItem>\r\n                <Glyphicon glyph='home' /> Home\r\n              </NavItem>\r\n            </LinkContainer>\r\n            <LinkContainer to={'/counter'}>\r\n              <NavItem>\r\n                <Glyphicon glyph='education' /> Counter\r\n              </NavItem>\r\n            </LinkContainer>\r\n            <LinkContainer to={'/fetchdata'}>\r\n              <NavItem>\r\n                <Glyphicon glyph='th-list' /> Fetch data\r\n              </NavItem>\r\n            </LinkContainer>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Col, Grid, Row } from 'react-bootstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  displayName = Layout.name\r\n\r\n  render() {\r\n    return (\r\n      <Grid fluid>\r\n        <Row>\r\n          <Col sm={3}>\r\n            <NavMenu />\r\n          </Col>\r\n          <Col sm={9}>\r\n            {this.props.children}\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Home extends Component {\r\n  displayName = Home.name\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Hello, world!</h1>\r\n        <p>Welcome to your new single-page application, built with:</p>\r\n        <ul>\r\n          <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n          <li><a href='https://facebook.github.io/react/'>React</a> for client-side code</li>\r\n          <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n        </ul>\r\n        <p>To help you get started, we've also set up:</p>\r\n        <ul>\r\n          <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n          <li><strong>Development server integration</strong>. In development mode, the development server from <code>create-react-app</code> runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n          <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration produces minified, efficiently bundled JavaScript files.</li>\r\n        </ul>\r\n        <p>The <code>ClientApp</code> subdirectory is a standard React application based on the <code>create-react-app</code> template. If you open a command prompt in that directory, you can run <code>npm</code> commands such as <code>npm test</code> or <code>npm install</code>.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  displayName = FetchData.name\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n\r\n    fetch('api/SampleData/WeatherForecasts')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({ forecasts: data, loading: false });\r\n      });\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.dateFormatted}>\r\n              <td>{forecast.dateFormatted}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1>Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  displayName = Counter.name\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n\r\n        <p>Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n        <button onClick={this.incrementCounter}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { FetchData } from './components/FetchData';\r\nimport { Counter } from './components/Counter';\r\n\r\nexport default class App extends Component {\r\n  displayName = App.name\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/counter' component={Counter} />\r\n        <Route path='/fetchdata' component={FetchData} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap-theme.css';\r\nimport './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}